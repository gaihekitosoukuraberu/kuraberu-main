name: GAS CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'gas-backend/**'
  pull_request:
    branches: [main]
    paths:
      - 'gas-backend/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install -g @google/clasp
          npm install --save-dev eslint
          
      - name: Lint GAS files
        run: |
          npx eslint gas-backend/*.gs --ext .gs || true
          
      - name: Validate GAS syntax
        run: |
          for file in gas-backend/*.gs; do
            echo "Validating $file"
            node -c "$file" 2>/dev/null || echo "Warning: $file may have syntax issues"
          done

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install clasp
        run: npm install -g @google/clasp
        
      - name: Setup clasp credentials
        run: |
          echo '${{ secrets.CLASP_CREDENTIALS }}' > ~/.clasprc.json
          
      - name: Configure development environment
        run: |
          cd gas-backend
          echo '${{ secrets.DEV_CLASP_JSON }}' > .clasp-dev.json
          cp .clasp-dev.json .clasp.json
          
      - name: Deploy to Development
        run: |
          cd gas-backend
          clasp push --force
          clasp deploy --description "Auto-deploy from develop branch - $(date)"
          
      - name: Update deployment status
        run: |
          echo "Development deployment completed at $(date)" >> $GITHUB_STEP_SUMMARY

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || 
        (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install clasp
        run: npm install -g @google/clasp
        
      - name: Setup clasp credentials
        run: |
          echo '${{ secrets.CLASP_CREDENTIALS }}' > ~/.clasprc.json
          
      - name: Configure production environment
        run: |
          cd gas-backend
          echo '${{ secrets.PROD_CLASP_JSON }}' > .clasp-prod.json
          cp .clasp-prod.json .clasp.json
          
      - name: Create backup before deployment
        run: |
          cd gas-backend
          mkdir -p backups
          clasp pull --force
          tar -czf "backups/pre-deploy-backup-$(date +%Y%m%d-%H%M%S).tar.gz" *.gs
          
      - name: Deploy to Production
        run: |
          cd gas-backend
          clasp push --force
          clasp deploy --description "Production deployment from main branch - $(date)"
          
      - name: Archive backup
        uses: actions/upload-artifact@v4
        with:
          name: production-backup-${{ github.sha }}
          path: gas-backend/backups/
          retention-days: 30
          
      - name: Update deployment status
        run: |
          echo "Production deployment completed at $(date)" >> $GITHUB_STEP_SUMMARY

  backup:
    name: Scheduled Backup
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install clasp
        run: npm install -g @google/clasp
        
      - name: Setup clasp credentials
        run: |
          echo '${{ secrets.CLASP_CREDENTIALS }}' > ~/.clasprc.json
          
      - name: Backup Production
        run: |
          cd gas-backend
          echo '${{ secrets.PROD_CLASP_JSON }}' > .clasp.json
          mkdir -p backups
          clasp pull --force
          tar -czf "backups/scheduled-backup-$(date +%Y%m%d-%H%M%S).tar.gz" *.gs
          
      - name: Archive backup
        uses: actions/upload-artifact@v4
        with:
          name: scheduled-backup-${{ github.run_id }}
          path: gas-backend/backups/
          retention-days: 90